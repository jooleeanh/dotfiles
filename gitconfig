[color]
  branch = auto
  diff = auto
  interactive = auto
  status = auto
  ui = auto

[color "branch"]
  current = green
  remote = yellow

[core]
	pager = less -+$LESS -FRX
	editor = vim
	filemode = false

[alias]

  # List git alias
  alias = !git config --list | grep 'alias\\.' | sed 's/alias\\.\\([^=]*\\)=\\(.*\\)/\\1\\\t => \\2/' | sort

	co = checkout
  m = checkout master
	st = status -s
  br = branch
  resetmaster = "!git checkout -b my-saved-work && git add . && git commit -m 'Saving my work, just in case' && git checkout master && git fetch origin && git reset --hard origin/master && git sweep"

  dif = diff --word-diff
  d = diff --color-words
  # Diff with stat
  stat = !git --no-pager diff --stat

  c = commit
	ci = commit -m
  ca = commit --amend # careful
  # commit changes to last commit
  amend = commit --amend -m
  # puts HEAD to workin commit?
  undo = reset --soft HEAD^
  unstage = reset HEAD --

  # Shows last
  last = log -1 HEAD
  # Shows nice log
  ls = log --pretty=format:"%C(yellow)%h%C(blue)\\ [%cn]%Cred%d\\ %Creset%s" --decorate
  # Shows log in one line
  ol = log --pretty=oneline --abbrev-commit --graph --decorate
  # Shows log with text wrapping
  logw = log --less
  # "log absolute date" Shows log in one line (commit id, date, commit text)
  lad = log --pretty=format:"%C(yellow)%h\\ %C(blue)[%cn]\\ %C(cyan)%ad\\ %Creset%s\\ %Cred%d" --decorate --date=short
  # "log (relative) date" Shows log in one line w/ relative date (commit id, date, commit text)
  ld = log --pretty=format:"%C(yellow)%h%\\ C(blue)[%cn]\\ %C(cyan)%ad\\ %Creset%s\\ %Cred%d" --decorate --date=relative
  # +/- per files
  ll = log --stat --abbrev-commit
  # commits per author
  authors = shortlog -sn
  # Shows commits+diff for one file
  fl = log -u
  # List each commit showing changed files
  fo = fetch origin

  # Clean merged branches
  sweep = !git branch --merged master | grep -v 'master$' | xargs git branch -d && git remote prune origin

  # http://www.jukie.net/bart/blog/pimping-out-git-log
  lg = log --graph --all --pretty=format:'%Cred%h%Creset - %s %Cgreen(%cr) %C(bold blue)%an%Creset %C(yellow)%d%Creset'

  # Serve local repo. http://coderwall.com/p/eybtga
  # Then other can access via `git clone git://#{YOUR_IP_ADDRESS}/
  serve = !git daemon --reuseaddr --verbose  --base-path=. --export-all ./.git

[help]
  autocorrect = 1

[push]
	default = simple

[branch "master"]
  mergeoptions = --no-edit
[user]
	email = julian@appsmiles.fr
	name = Julian Honma
